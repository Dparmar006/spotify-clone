[{"E:\\React\\- CLONES\\spotify-clone\\src\\index.js":"1","E:\\React\\- CLONES\\spotify-clone\\src\\App.js":"2","E:\\React\\- CLONES\\spotify-clone\\src\\reportWebVitals.js":"3","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Header.js":"4","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Row.js":"5","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\RowCard.js":"6","E:\\React\\- CLONES\\spotify-clone\\src\\Router.js":"7","E:\\React\\- CLONES\\spotify-clone\\src\\screens\\InfoScreen.js":"8","E:\\React\\- CLONES\\spotify-clone\\src\\theme.js":"9","E:\\React\\- CLONES\\spotify-clone\\src\\screens\\Login.js":"10","E:\\React\\- CLONES\\spotify-clone\\src\\spotify.js":"11","E:\\React\\- CLONES\\spotify-clone\\src\\reducer.js":"12","E:\\React\\- CLONES\\spotify-clone\\src\\DataLayer.js":"13","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Sidebar.js":"14","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Footer.js":"15","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\CardGrid.js":"16"},{"size":683,"mtime":1612429902456,"results":"17","hashOfConfig":"18"},{"size":2619,"mtime":1617446494123,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1626,"mtime":1617380945446,"results":"21","hashOfConfig":"18"},{"size":796,"mtime":1617381081639,"results":"22","hashOfConfig":"18"},{"size":768,"mtime":1617287451297,"results":"23","hashOfConfig":"18"},{"size":526,"mtime":1610716626090,"results":"24","hashOfConfig":"18"},{"size":2571,"mtime":1610479476121,"results":"25","hashOfConfig":"18"},{"size":119,"mtime":1610715626996,"results":"26","hashOfConfig":"18"},{"size":494,"mtime":1610717296714,"results":"27","hashOfConfig":"18"},{"size":821,"mtime":1610718128226,"results":"28","hashOfConfig":"18"},{"size":1284,"mtime":1617432094581,"results":"29","hashOfConfig":"18"},{"size":391,"mtime":1612430247646,"results":"30","hashOfConfig":"18"},{"size":1478,"mtime":1617369337890,"results":"31","hashOfConfig":"18"},{"size":2697,"mtime":1617374014993,"results":"32","hashOfConfig":"18"},{"size":2096,"mtime":1617429988022,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"lfe3uf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React\\- CLONES\\spotify-clone\\src\\index.js",[],["69","70"],"E:\\React\\- CLONES\\spotify-clone\\src\\App.js",["71","72","73"],"E:\\React\\- CLONES\\spotify-clone\\src\\reportWebVitals.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Header.js",["74","75","76","77","78"],"import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport \"./Header.css\";\r\nimport ArrowBackRounded from \"@material-ui/icons/ArrowBackIosRounded\";\r\nimport PersonRounded from \"@material-ui/icons/PersonRounded\";\r\n\r\nimport { ExitToApp, MenuRounded } from \"@material-ui/icons\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useDataLayerValue } from \"../DataLayer\";\r\n\r\nconst Header = () => {\r\n  const [{ user }] = useDataLayerValue();\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__container\">\r\n        <div className=\"header__left\">\r\n          {/* <input type=\"checkbox\" id=\"menu\" />\r\n          <label htmlFor=\"menu\" for=\"menu\">\r\n            <MenuRounded />\r\n          </label> */}\r\n\r\n          <button\r\n            id=\"menu-btn\"\r\n            className=\"button\"\r\n            onClick={() => {\r\n              const sidebar = document.getElementById(\"sidebar\");\r\n              if (sidebar.className == \"sidebar\") {\r\n                sidebar.classList.add(\"sidebar-closed\");\r\n              } else {\r\n                sidebar.classList.remove(\"sidebar-closed\");\r\n                sidebar.classList.add(\"sidebar\");\r\n              }\r\n            }}\r\n          >\r\n            <MenuRounded />\r\n          </button>\r\n\r\n          <img\r\n            src=\"./assets/images/Spotify_Logo_RGB_White.png\"\r\n            className=\"header__logo\"\r\n          />\r\n        </div>\r\n        <div className=\"header__userinfo\">\r\n          <Avatar alt={user?.display_name} src={user?.images[0]?.url} />\r\n          <h4>{user?.display_name}</h4>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Row.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\Components\\RowCard.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\Router.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\screens\\InfoScreen.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\theme.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\screens\\Login.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\spotify.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\reducer.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\DataLayer.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Sidebar.js",[],"E:\\React\\- CLONES\\spotify-clone\\src\\Components\\Footer.js",["79","80"],"import { Slider } from \"@material-ui/core\";\r\nimport {\r\n  Devices,\r\n  Favorite,\r\n  Mic,\r\n  PlayArrowRounded,\r\n  PlayCircleFilledOutlined,\r\n  QueueMusic,\r\n  RemoveFromQueue,\r\n  Repeat,\r\n  Shuffle,\r\n  SkipNext,\r\n  SkipPrevious,\r\n  VolumeDown,\r\n} from \"@material-ui/icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDataLayerValue } from \"../DataLayer\";\r\nimport \"./Footer.css\";\r\nconst Footer = () => {\r\n  const [{ currentlyPlayingTrack }] = useDataLayerValue();\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img\r\n          src={\r\n            currentlyPlayingTrack?.item?.album?.images[0]?.url ||\r\n            \"./assets/images/tomato-face.png\"\r\n          }\r\n          alt=\"song-art\"\r\n          className=\"footer__songart\"\r\n        />\r\n        <div className=\"footer__songinfo\">\r\n          <p className=\"footer__songname\">\r\n            {currentlyPlayingTrack?.item?.name || \"Dixit's Life\"}\r\n          </p>\r\n          {currentlyPlayingTrack?.item?.artists.map((artist) => (\r\n            <p className=\"footer__artistname\">{artist.name}</p>\r\n          )) || \"@pistanthrobian\"}\r\n        </div>\r\n        <div className=\"footer__left__buttons\">\r\n          <button className=\"button\">\r\n            <Favorite />\r\n          </button>\r\n          <button className=\"button\">\r\n            <RemoveFromQueue />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer__center\">\r\n        <div className=\"footer__music-controls\">\r\n          <button className=\"button\">\r\n            <Shuffle />\r\n          </button>\r\n\r\n          <button className=\"button\">\r\n            <SkipPrevious />\r\n          </button>\r\n          <button className=\"button\" id=\"play-button\">\r\n            <PlayCircleFilledOutlined fontSize=\"large\" />\r\n          </button>\r\n          <button className=\"button\">\r\n            <SkipNext />\r\n          </button>\r\n          <button className=\"button\">\r\n            <Repeat />\r\n          </button>\r\n        </div>\r\n        {/* <div className=\"footer__progressbar\">\r\n          <p className=\"footer__songcurrenttime\">2:42</p>\r\n          <progress id=\"songprogress\" max=\"100\" value=\"40\" />\r\n          <p className=\"footer__songendtime\">5:12</p>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        <button className=\"button\">\r\n          <Mic />\r\n        </button>\r\n        <button className=\"button\">\r\n          <QueueMusic />\r\n        </button>\r\n        <button className=\"button\">\r\n          <Devices />\r\n        </button>\r\n        <button className=\"button\">\r\n          <VolumeDown />\r\n        </button>\r\n        <Slider />\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","E:\\React\\- CLONES\\spotify-clone\\src\\Components\\CardGrid.js",["81","82","83","84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":28,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"95","line":17,"column":9,"nodeType":"93","messageId":"94","endLine":17,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":77,"column":6,"nodeType":"98","endLine":77,"endColumn":8,"suggestions":"99"},{"ruleId":"91","severity":1,"message":"100","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":24},{"ruleId":"91","severity":1,"message":"101","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":21},{"ruleId":"91","severity":1,"message":"102","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":27,"column":37,"nodeType":"105","messageId":"106","endLine":27,"endColumn":39},{"ruleId":"107","severity":1,"message":"108","line":38,"column":11,"nodeType":"109","endLine":41,"endColumn":13},{"ruleId":"91","severity":1,"message":"110","line":6,"column":3,"nodeType":"93","messageId":"94","endLine":6,"endColumn":19},{"ruleId":"91","severity":1,"message":"111","line":16,"column":17,"nodeType":"93","messageId":"94","endLine":16,"endColumn":26},{"ruleId":"112","severity":1,"message":"113","line":12,"column":11,"nodeType":"109","endLine":16,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":20,"column":11,"nodeType":"109","endLine":24,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":28,"column":11,"nodeType":"109","endLine":32,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":36,"column":11,"nodeType":"109","endLine":40,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":44,"column":11,"nodeType":"109","endLine":48,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":52,"column":11,"nodeType":"109","endLine":56,"endColumn":13},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setTopFeed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'ArrowBackRounded' is defined but never used.","'PersonRounded' is defined but never used.","'ExitToApp' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PlayArrowRounded' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [dispatch]",{"range":"119","text":"120"},[2244,2246],"[dispatch]"]